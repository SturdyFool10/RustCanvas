syntax = "proto3";

package testall;

// Scalar types
message ScalarTypes {
  string str_field = 1;
  int32 int32_field = 2;
  int64 int64_field = 3;
  uint32 uint32_field = 4;
  uint64 uint64_field = 5;
  sint32 sint32_field = 6;
  sint64 sint64_field = 7;
  fixed32 fixed32_field = 8;
  fixed64 fixed64_field = 9;
  sfixed32 sfixed32_field = 10;
  sfixed64 sfixed64_field = 11;
  bool bool_field = 12;
  bytes bytes_field = 13;
  float float_field = 14;
  double double_field = 15;
}

// Enum type
enum TestEnum {
  UNKNOWN = 0;
  FIRST = 1;
  SECOND = 2;
  THIRD = 3;
}

// Message with enum and repeated fields
message EnumAndRepeated {
  TestEnum enum_field = 1;
  repeated TestEnum repeated_enum = 2;
  repeated int32 repeated_int32 = 3;
  repeated string repeated_string = 4;
}

// Nested message
message Outer {
  string outer_field = 1;

  message Inner {
    int32 inner_field = 1;
    string inner_str = 2;
  }

  Inner inner = 2;
  repeated Inner repeated_inner = 3;
}

// Message with optional fields (proto3 syntax, optional keyword)
message OptionalFields {
  optional string opt_str = 1;
  optional int32 opt_int32 = 2;
  optional bool opt_bool = 3;
}

// Message with default values (proto3 does not support explicit defaults, but test unset fields)
message Defaults {
  string str_field = 1;
  int32 int32_field = 2;
  bool bool_field = 3;
  TestEnum enum_field = 4;
}

// Message with all types, nested, repeated, enums, bytes, etc.
message Everything {
  ScalarTypes scalars = 1;
  EnumAndRepeated enums_and_repeated = 2;
  Outer.Inner nested = 3;
  repeated Outer.Inner repeated_nested = 4;
  OptionalFields optional = 5;
  Defaults defaults = 6;
  bytes raw_bytes = 7;
  repeated bytes repeated_bytes = 8;
  TestEnum enum_field = 9;
  repeated TestEnum repeated_enum = 10;
}
